import type { Commitment } from "@solana/web3.js";
import { Connection, Keypair } from "@solana/web3.js";
/**
 * The raw config loaded from the yaml file
 */
export declare type SolanaCliConfigRaw = {
    json_rpc_url: string;
    websocket_url: string;
    keypair_path: string;
    address_labels: {
        [address in string]: string;
    };
    commitment: Commitment;
};
export declare const SOLANA_CLI_CONFIG_RAW_DEFAULT: SolanaCliConfigRaw;
export declare class SolanaCliConfig {
    static DEFAULT_PATH: string;
    keypairPath: string;
    addressLabels: Map<string, string>;
    commitment: Commitment;
    jsonRpcUrl: string;
    websocketUrl: string;
    constructor({ json_rpc_url, websocket_url, keypair_path, address_labels, commitment, }: SolanaCliConfigRaw);
    static default(): SolanaCliConfig;
    static load(path?: string): SolanaCliConfig;
    toRaw(): SolanaCliConfigRaw;
    save(path?: string, overwrite?: boolean): void;
    loadKeypair(): Keypair;
    createConnection(): Connection;
}
